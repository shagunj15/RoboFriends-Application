{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundary.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","askedRobot","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAeeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,6BAAKC,IACL,4BAAIC,WCgBLI,EAtBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAQf,OACI,8BACMA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OAAO,cAAC,EAAD,CAEHV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCOVC,E,kDAnBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,mDAEJG,KAAKL,MAAMO,a,GAhBEC,aCebC,G,MAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,8BACI,uBACIpB,UAAU,mDACVqB,KAAK,SACLC,YAAY,qBACZC,SAAUH,QCAXI,G,MARA,SAACf,GACZ,OACI,qBAAKgB,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACKlB,EAAMO,aCmDJY,E,kDA/CX,aAAe,IAAD,8BACV,gBAkBJC,eAAiB,SAACC,GACd,EAAKf,SAAS,CAACI,YAAaW,EAAMC,OAAOC,SAlBzC,EAAKtB,MAAQ,CACTN,OAAQ,GACRe,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBc,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKtB,SAAS,CAAEX,OAAQiC,S,oBASpC,WAAW,IAAD,OACAC,EAAaxB,KAAKJ,MAAMN,OAAOmC,QAAO,SAAAC,GACxC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAS,EAAKhC,MAAMS,YAAYsB,kBAEpE,OAAiC,IAA7B3B,KAAKJ,MAAMN,OAAOuC,OACX,oBAAI3C,UAAU,KAAd,qBAIH,sBAAKA,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWoB,aAAgBN,KAAKe,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAUkC,e,GAtC9BrB,aCIH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7e56185b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// a cool thing to do is instead of writing (props), we can write ({id, name, email})\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div className='tc bg-light-purple dib br4 pa3 ma2 grow bw3 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?100x100`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    // const cardComponent = robots.map((user, i) => {\r\n    //     return <Card\r\n    //         key={i}\r\n    //         id={robots[i].id}\r\n    //         name={robots[i].name}\r\n    //         email={robots[i].email}/>\r\n    // })\r\n    return (\r\n        <div>\r\n            { robots.map((user, i) => {\r\n                return <Card\r\n                    key={i}\r\n                    id={robots[i].id}\r\n                    name={robots[i].name}\r\n                    email={robots[i].email}/>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>This is not good!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport './SearchBox.css'\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                className='pa2 ba b--solid bw1 b--dark-pink bg-washed-green'\r\n                type='search'\r\n                placeholder='search your robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React , { Component } from 'react';\r\nimport CardList from \"../components/CardList\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport './App.css';\r\nimport Scroll from \"../components/Scroll\";\r\n\r\n\r\nclass App extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {\r\n                return response.json();\r\n        })\r\n            .then(users => {\r\n                this.setState({ robots: users});\r\n        })\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n\r\n    render () {\r\n        const askedRobot = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if (this.state.robots.length === 0) { //can also write !this.state.robots.length as this would mean 0\r\n            return <h2 className='tc'>Loading</h2>\r\n        }\r\n        else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots = {askedRobot}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                    {/* state becomes a prop cz robots is then passed down as a prop to CardList*/}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}